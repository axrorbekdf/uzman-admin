import{u as b,_}from"./BmqrhUpv.js";import{_ as k}from"./DmD2pl4u.js";import{L as p,h as y,K as h,I as d,o as l,x as F,c as g,b as x}from"./D-e5Xl1W.js";import{u as r}from"./ADEZgYjw.js";import"./jC18RFQA.js";import"./4w8HwJQ8.js";import"./CqFJUeWa.js";import"./TTmt9t3h.js";const a={index(t){return r()("feedback/index",{method:"GET",params:t})},forOptions(){return r()("feedback/for/options",{method:"GET"})},view(t){return r()(`feedback/view/${t}`,{method:"GET"})},store(t){return r()("feedback/store",{method:"POST",body:t})},update(t,e){return r()(`feedback/update/${t}`,{method:"PUT",body:e})},delete(t){return r()(`feedback/delete/${t}`,{method:"DELETE"})}},v=p("feedback",{state:()=>({feedback:null,feedbacks:[],model:{modelForForm:{entity:{id:void 0,text:void 0,user_from_id:void 0,user_to_id:void 0},viewEntity:{id:{name:"ID",type:"number"},text:{name:"Text",type:"string"},user_from:{name:"Userdan",type:"object",relation:"name"},user_to:{name:"Userga",type:"object",relation:"name"}},formTemplate:[{label:"Text",name:"text"},{label:"Userdan",name:"user_from_id"},{label:"Userga",name:"user_to_id"}],rules:{text:{rule:"required",message:"To'ldirilishi kerak"},user_from_id:{rule:"required",message:"To'ldirilishi kerak"},user_to_id:{rule:"required",message:"To'ldirilishi kerak"}}},columns:[{key:"id",label:"ID",sortable:!0},{key:"text",label:"Text",sortable:!0},{key:"user_from.name",label:"Userdan",sortable:!0},{key:"user_to.name",label:"Userga",sortable:!0},{key:"date",label:"Sana",sortable:!0},{key:"actions"}]}}),getters:{feedback:t=>t.feedback,getList:t=>t.feedbacks},actions:{async getAllList(){try{a.forOptions().then(t=>{this.feedbacks=t.resoult.data}).catch(t=>{console.error("Failed to load posts:",t)})}catch(t){console.error("Failed to load posts:",t)}},async createFeedback(t){try{a.store(t).then(e=>{this.getAllList()}).catch(e=>{console.error("Failed to load posts:",e)})}catch(e){console.error("Failed to load posts:",e)}},async updateFeedback(t,e){try{a.update(t,e).then(o=>{this.getAllList()}).catch(o=>{console.error("Failed to load posts:",o)})}catch(o){console.error("Failed to load posts:",o)}},async deleteFeedback(t){try{a.delete(t).then(e=>{this.getAllList()}).catch(e=>{console.error("Failed to load posts:",e)})}catch(e){console.error("Failed to load posts:",e)}}}}),L={key:1},D=y({__name:"index",setup(t){const e=b(),o=v();h(async()=>{o.getAllList()});function i(){o.model.modelForForm.entity={id:void 0,text:void 0,user_from_id:void 0,user_to_id:void 0}}function n(){e.set(!0),o.createFeedback(o.model.modelForForm.entity).then(s=>{e.set(!1)}).catch(()=>{e.set(!1)}).finally(()=>{e.set(!1)})}function c(){e.set(!0),o.updateFeedback(o.model.modelForForm.entity.id??0,o.model.modelForForm.entity).then(s=>{e.set(!1)}).catch(()=>{e.set(!1)}).finally(()=>{e.set(!1)})}function m(){console.log(o.model.modelForForm.entity.id??0),e.set(!0),o.deleteFeedback(o.model.modelForForm.entity.id??0).then(s=>{e.set(!1)}).catch(()=>{e.set(!1)}).finally(()=>{e.set(!1)})}return(s,T)=>{const u=_,f=k;return d(e).isLoading?(l(),F(u,{key:0})):(l(),g("div",L,[x(f,{data:d(o).getList,model:d(o).model,"clear-entity":i,"create-model":n,"update-model":c,"delete-model":m},null,8,["data","model"])]))}}});export{D as default};
