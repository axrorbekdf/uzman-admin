import{u as p,_ as g}from"./dCH5DhQ6.js";import{_ as u}from"./BNPpijYB.js";import{L as f,h,K as F,I as s,o as l,x as _,c as C,b as k}from"./Be7rl1fj.js";import{C as r}from"./BbxQWPrL.js";import"./B2Fxs94Q.js";import"./VnilOB_E.js";import"./C0oNA2KS.js";import"./C8fKHatr.js";import"./CkKw5vfm.js";const b=f("category",{state:()=>({category:null,categories:[],model:{modelForForm:{entity:{id:void 0,name:void 0,icon:void 0},viewEntity:{id:{name:"ID",type:"number"},name:{name:"Nomi",type:"string"},icon:{name:"Icon",type:"file"}},formTemplate:[{label:"Category nomi",name:"name",type:String},{label:"Category icon",name:"icon",type:File}],rules:{name:{rule:"required",message:"To'ldirilishi kerak"},icon:{rule:"required",message:"To'ldirilishi kerak"}}},columns:[{key:"id",label:"ID",sortable:!0},{key:"name",label:"Name",sortable:!0},{key:"icon",label:"Icon",sortable:!0},{key:"date",label:"Sana",sortable:!0},{key:"actions"}]}}),getters:{category:o=>o.category,getList:o=>o.categories},actions:{async getAllList(){try{r.forOptions().then(o=>{this.categories=o.resoult.data}).catch(o=>{console.error("Failed to load posts:",o)})}catch(o){console.error("Failed to load posts:",o)}},async createCategory(o){try{r.store(o).then(e=>{this.getAllList()}).catch(e=>{console.error("Failed to load posts:",e)})}catch(e){console.error("Failed to load posts:",e)}},async updateCategory(o,e){try{r.update(o,e).then(t=>{this.getAllList()}).catch(t=>{console.error("Failed to load posts:",t)})}catch(t){console.error("Failed to load posts:",t)}},async deleteCategory(o){try{r.delete(o).then(e=>{this.getAllList()}).catch(e=>{console.error("Failed to load posts:",e)})}catch(e){console.error("Failed to load posts:",e)}}}}),L={key:1},D=h({__name:"index",setup(o){const e=p(),t=b();F(async()=>{t.getAllList()});function n(){t.model.modelForForm.entity={id:void 0,name:void 0,icon:void 0}}function i(){e.set(!0),t.createCategory(t.model.modelForForm.entity).then(a=>{e.set(!1)}).catch(()=>{e.set(!1)}).finally(()=>{e.set(!1)})}function c(){e.set(!0),t.updateCategory(t.model.modelForForm.entity.id??0,t.model.modelForForm.entity).then(a=>{e.set(!1)}).catch(()=>{e.set(!1)}).finally(()=>{e.set(!1)})}function d(){console.log(t.model.modelForForm.entity.id??0),e.set(!0),t.deleteCategory(t.model.modelForForm.entity.id??0).then(a=>{e.set(!1)}).catch(()=>{e.set(!1)}).finally(()=>{e.set(!1)})}return(a,v)=>{const m=g,y=u;return s(e).isLoading?(l(),_(m,{key:0})):(l(),C("div",L,[k(y,{data:s(t).getList,model:s(t).model,"clear-entity":n,"create-model":i,"update-model":c,"delete-model":d},null,8,["data","model"])]))}}});export{D as default};
