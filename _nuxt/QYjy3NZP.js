import{u as p,_ as h}from"./r1xUzUwn.js";import{_ as f}from"./DRdkdGpI.js";import{L as y,h as F,K as _,I as a,o as i,x as k,c as L,b as R}from"./qDZVs_zL.js";import{u as r}from"./CkKw5vfm.js";import"./lals4Z0I.js";import"./BfCwIDr9.js";import"./CGZlEfa_.js";import"./DB5mCrBQ.js";const s={index(o){return r()("region/index",{method:"GET",params:o})},forOptions(){return r()("region/for/options",{method:"GET"})},view(o){return r()(`region/view/${o}`,{method:"GET"})},store(o){return r()("region/store",{method:"POST",body:o})},update(o,e){return r()(`region/update/${o}`,{method:"PUT",body:e})},delete(o){return r()(`region/delete/${o}`,{method:"DELETE"})}},b=y("region",{state:()=>({region:null,regions:[],model:{modelForForm:{entity:{id:void 0,name:void 0},formTemplate:[{label:"Nomi",name:"name"}],rules:{name:{rule:"required",message:"To'ldirilishi kerak"},icon:{rule:"required",message:"To'ldirilishi kerak"}}},columns:[{key:"id",label:"ID",sortable:!0},{key:"name",label:"Name",sortable:!0},{key:"date",label:"Sana",sortable:!0},{key:"actions"}]}}),getters:{region:o=>o.region,getList:o=>o.regions},actions:{async getAllList(){try{s.forOptions().then(o=>{this.regions=o.resoult.data}).catch(o=>{console.error("Failed to load posts:",o)})}catch(o){console.error("Failed to load posts:",o)}},async createRegion(o){try{s.store(o).then(e=>{this.getAllList()}).catch(e=>{console.error("Failed to load posts:",e)})}catch(e){console.error("Failed to load posts:",e)}},async updateRegion(o,e){try{s.update(o,e).then(t=>{this.getAllList()}).catch(t=>{console.error("Failed to load posts:",t)})}catch(t){console.error("Failed to load posts:",t)}},async deleteRegion(o){try{s.delete(o).then(e=>{this.getAllList()}).catch(e=>{console.error("Failed to load posts:",e)})}catch(e){console.error("Failed to load posts:",e)}}}}),T={key:1},O=F({__name:"index",setup(o){const e=p(),t=b();_(async()=>{t.getAllList()});function l(){t.model.modelForForm.entity={id:void 0,name:void 0}}function d(){e.set(!0),t.createRegion(t.model.modelForForm.entity).then(n=>{e.set(!1)}).catch(()=>{e.set(!1)}).finally(()=>{e.set(!1)})}function c(){e.set(!0),t.updateRegion(t.model.modelForForm.entity.id??0,t.model.modelForForm.entity).then(n=>{e.set(!1)}).catch(()=>{e.set(!1)}).finally(()=>{e.set(!1)})}function m(){console.log(t.model.modelForForm.entity.id??0),e.set(!0),t.deleteRegion(t.model.modelForForm.entity.id??0).then(n=>{e.set(!1)}).catch(()=>{e.set(!1)}).finally(()=>{e.set(!1)})}return(n,v)=>{const u=h,g=f;return a(e).isLoading?(i(),k(u,{key:0})):(i(),L("div",T,[R(g,{data:a(t).getList,model:a(t).model,"clear-entity":l,"create-model":d,"update-model":c,"delete-model":m},null,8,["data","model"])]))}}});export{O as default};
