import{u as p,_ as f}from"./sCN19T05.js";import{_ as y}from"./CMuuHvFw.js";import{L as h,h as F,K as b,I as l,o as a,x as g,c as k,b as x}from"./qNHidORN.js";import{u as r}from"./CkKw5vfm.js";import"./BtQSNnrc.js";import"./CNBYn2MZ.js";import"./Cw8eE_2A.js";import"./BN34Dwmq.js";const s={index(t){return r()("comment/index",{method:"GET",params:t})},forOptions(){return r()("comment/for/options",{method:"GET"})},view(t){return r()(`comment/view/${t}`,{method:"GET"})},store(t){return r()("comment/store",{method:"POST",body:t})},update(t,e){return r()(`comment/update/${t}`,{method:"PUT",body:e})},delete(t){return r()(`comment/delete/${t}`,{method:"DELETE"})}},v=h("comment",{state:()=>({comment:null,comments:[],model:{modelForForm:{entity:{id:void 0,text:void 0,user_from_id:void 0,user_to_id:void 0},viewEntity:{id:{name:"ID",type:"number"},text:{name:"Text",type:"string"},user_from:{name:"Userdan",type:"object",relation:"name"},user_to:{name:"Userga",type:"object",relation:"name"}},formTemplate:[{label:"Text",name:"text",relation:null},{label:"Userdan",name:"user_from_id",relation:null},{label:"Userga",name:"user_to_id",relation:null}],rules:{text:{rule:"required",message:"To'ldirilishi kerak"},user_from_id:{rule:"required",message:"To'ldirilishi kerak"},user_to_id:{rule:"required",message:"To'ldirilishi kerak"}}},columns:[{key:"id",label:"ID",sortable:!0},{key:"text",label:"Text",sortable:!0},{key:"user_from.name",label:"Userdan",sortable:!0},{key:"user_to.name",label:"Userga",sortable:!0},{key:"date",label:"Sana",sortable:!0},{key:"actions"}]}}),getters:{comment:t=>t.comment,getList:t=>t.comments},actions:{async getAllList(){try{s.forOptions().then(t=>{this.comments=t.resoult.data}).catch(t=>{console.error("Failed to load posts:",t)})}catch(t){console.error("Failed to load posts:",t)}},async createComment(t){try{s.store(t).then(e=>{this.getAllList()}).catch(e=>{console.error("Failed to load posts:",e)})}catch(e){console.error("Failed to load posts:",e)}},async updateComment(t,e){try{s.update(t,e).then(o=>{this.getAllList()}).catch(o=>{console.error("Failed to load posts:",o)})}catch(o){console.error("Failed to load posts:",o)}},async deleteComment(t){try{s.delete(t).then(e=>{this.getAllList()}).catch(e=>{console.error("Failed to load posts:",e)})}catch(e){console.error("Failed to load posts:",e)}}}}),L={key:1},B=F({__name:"index",setup(t){const e=p(),o=v();b(async()=>{o.getAllList()});function m(){o.model.modelForForm.entity={id:void 0,text:void 0,user_from_id:void 0,user_to_id:void 0}}function i(){e.set(!0),o.createComment(o.model.modelForForm.entity).then(n=>{e.set(!1)}).catch(()=>{e.set(!1)}).finally(()=>{e.set(!1)})}function d(){e.set(!0),o.updateComment(o.model.modelForForm.entity.id??0,o.model.modelForForm.entity).then(n=>{e.set(!1)}).catch(()=>{e.set(!1)}).finally(()=>{e.set(!1)})}function c(){console.log(o.model.modelForForm.entity.id??0),e.set(!0),o.deleteComment(o.model.modelForForm.entity.id??0).then(n=>{e.set(!1)}).catch(()=>{e.set(!1)}).finally(()=>{e.set(!1)})}return(n,T)=>{const u=f,_=y;return l(e).isLoading?(a(),g(u,{key:0})):(a(),k("div",L,[x(_,{data:l(o).getList,model:l(o).model,"clear-entity":m,"create-model":i,"update-model":d,"delete-model":c},null,8,["data","model"])]))}}});export{B as default};
